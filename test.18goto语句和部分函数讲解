#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
//goto语句
//只能在一个函数范围内跳出
//不能垮函数 

//int main()
//{
//flag:
//	printf("hello\n");
//	printf("hello\n");
//	goto flag;
//	return 0;
//}

//关机程序
//只要运行起来 电脑就会在一分钟内关机
//要输入“我是猪”就会取消关机
//shutdown -s -t 60 关机
//shutdown -a 取消关机

#include <stdlib.h>
#include <string.h>
//int main()
//{
//	//关机
//	//C语言中提供了一个函数system()-执行系统命令
//	char input[20] = { 0 };
//	system("shutdown -s -t 60"); //system的头文件-stdlib.h
//again:
//	printf("请注意，你的电脑将在一分钟内关机，请输入：我是猪 来取消关机\n");
//	scanf("%s", input);
//	if (strcmp(input,"我是猪") == 0)//两个字符串比较 不能使用等号 应该使用strcmp() string compare
//		//strcmp头文件-string.h
//	{
//		system("shutdown -a");
//	}
//	else
//	{
//		goto again;
//	}
//	return 0;
//}

//用while循环
//int main()
//{
//	//关机
//	//C语言中提供了一个函数system()-执行系统命令
//	char input[20] = { 0 };
//	system("shutdown -s -t 60"); //system的头文件-stdlib.h
//	while (1)
//	{
//		printf("请注意，你的电脑将在一分钟内关机，请输入：我是猪 来取消关机\n");
//		scanf("%s", input);
//		if (strcmp(input, "我是猪") == 0)//两个字符串比较 不能使用等号 应该使用strcmp() string compare
//			//strcmp头文件-string.h
//		{
//			system("shutdown -a");
//			break;
//		}
//	}
//	return 0;
//}


//函数
//1.库函数
//2.自定义函数 

//IO函数：printf scanf getchar putchar
//字符串操作函数: strcmp strlen
//字符操作函数: tpupper （大小写转换）
//内存操作函数：memcpy memcmp memset
//时间/日期: time
//数字函数: sqrt pow
//其他函数

//字符串拷贝
//int main()
//{
//	char arr1[20] = { 0 };
//	char arr2[] = "hello bit";
//	strcpy(arr1, arr2);//复制arr2中的内容到arr1中
//	//strcpy的头文件是string.h
//	printf("%s", arr1);
//	return 0;
//}

//memset内存设置
//int main()
//{
//	char arr[] = "hello bit";
//	memset(arr, 'x', 5);
//	printf("%s", arr);
//	return 0;
//}

//自定义函数和库函数一样 也是有函数名，返回值类型和函数参数

//写一个函数可以找出两个整数中的最大值
//int get_max(int x,int y)
//{
//	int z = 0;
//	if (x > y)
//		z = x;
//	else
//		z = y;
//	return z;//返回z 较大值
//}
//int main()
//{
//	int a = 10;
//	int b = 20;
//	int max = get_max(a, b);
//	printf("%max = %d", max);
//	return 0;
//}

//交换两个整形的值

//函数返回类型的地方写出：void,表示这个函数不返回任何值，也不需要返回
// 写出问题了！！
// 因为写的函数中的 x y 的地址与 a 和 b 的地址不一样 故不能实现功能
//void Swap(int x, int y)
//{
//	int z = 0;
//	z = x;
//	x = y;
//	y = z;
//}
//int main()
//{
//	int a = 10;
//	int b = 20;
//	printf("交换前:a = %d b = %d\n", a, b);
//	Swap(a, b);
//	printf("交换后:a = %d b = %d\n", a, b);
//}


//修改后
//用指针来解决地址改变这一问题
//int main()
//{
//	int a = 10;
//	int* pa = &a;
//	*pa = 20;
//	printf("%d", a);
//	return 0;
//}


//void Swap(int* pa, int* pb)//传址调用
//{
//	int z = 0;
//	z = *pa;
//	*pa = *pb;
//	*pb = z;
//}
//int main()
//{
//	int a = 10;
//	int b = 20;
//	printf("交换前:a = %d b = %d\n", a, b);
//	Swap(&a,&b);
//	printf("交换后:a = %d b = %d\n", a, b);
//}
